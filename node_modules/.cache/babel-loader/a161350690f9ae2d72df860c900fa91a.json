{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tansu\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\ramp-fe-challenge\\\\src\\\\components\\\\Transactions\\\\TransactionPane.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionPane = _ref => {\n  _s();\n\n  let {\n    transaction,\n    loading,\n    setTransactionApproval: consumerSetTransactionApproval\n  } = _ref;\n  const [approved, setApproved] = useState(transaction.approved);\n\n  const postTransactionApprolval = async data => {\n    const endpoint = \"../../mock-data.json\";\n    console.log(\"endpoint\", endpoint);\n    console.log(\"data\", data);\n    const response = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampPane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampPane--content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText\",\n        children: [transaction.merchant, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: moneyFormatter.format(transaction.amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText--hushed RampText--s\",\n        children: [transaction.employee.firstName, \" \", transaction.employee.lastName, \" - \", transaction.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputCheckbox, {\n      id: transaction.id,\n      checked: approved,\n      disabled: loading,\n      onChange: async newValue => {\n        console.log(\"newValue\", newValue);\n        console.log(\"transaction.id\", transaction.id);\n        await consumerSetTransactionApproval({\n          transactionId: transaction.id,\n          newValue\n        });\n        await postTransactionApprolval({\n          id: transaction.id,\n          approved: newValue\n        });\n        setApproved(prev => !prev);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionPane, \"KPAjtgwy0mvFAelnTZhq541SWIA=\");\n\n_c = TransactionPane;\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionPane\");","map":{"version":3,"names":["useState","InputCheckbox","TransactionPane","transaction","loading","setTransactionApproval","consumerSetTransactionApproval","approved","setApproved","postTransactionApprolval","data","endpoint","console","log","response","fetch","method","headers","body","JSON","stringify","merchant","moneyFormatter","format","amount","employee","firstName","lastName","date","id","newValue","transactionId","prev","Intl","NumberFormat","style","currency"],"sources":["C:/Users/tansu/OneDrive/Masaüstü/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { InputCheckbox } from \"../InputCheckbox\"\nimport { TransactionPaneComponent } from \"./types\"\n\nexport const TransactionPane: TransactionPaneComponent = ({\n  transaction,\n  loading,\n  setTransactionApproval: consumerSetTransactionApproval,\n}) => {\n  const [approved, setApproved] = useState(transaction.approved)\n\n  const postTransactionApprolval = async (data: any) => {\n    const endpoint = \"../../mock-data.json\"\n    console.log(\"endpoint\", endpoint)\n    console.log(\"data\", data)\n    const response = await fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ ...data }),\n    })\n  }\n\n  return (\n    <div className=\"RampPane\">\n      <div className=\"RampPane--content\">\n        <p className=\"RampText\">{transaction.merchant} </p>\n        <b>{moneyFormatter.format(transaction.amount)}</b>\n        <p className=\"RampText--hushed RampText--s\">\n          {transaction.employee.firstName} {transaction.employee.lastName} - {transaction.date}\n        </p>\n      </div>\n      <InputCheckbox\n        id={transaction.id}\n        checked={approved}\n        disabled={loading}\n        onChange={async (newValue) => {\n          console.log(\"newValue\", newValue)\n          console.log(\"transaction.id\", transaction.id)\n          await consumerSetTransactionApproval({\n            transactionId: transaction.id,\n            newValue,\n          })\n\n          await postTransactionApprolval({\n            id: transaction.id,\n            approved: newValue,\n          })\n\n          setApproved((prev) => !prev)\n        }}\n      />\n    </div>\n  )\n}\n\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n})\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAGA,OAAO,MAAMC,eAAyC,GAAG,QAInD;EAAA;;EAAA,IAJoD;IACxDC,WADwD;IAExDC,OAFwD;IAGxDC,sBAAsB,EAAEC;EAHgC,CAIpD;EACJ,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACG,WAAW,CAACI,QAAb,CAAxC;;EAEA,MAAME,wBAAwB,GAAG,MAAOC,IAAP,IAAqB;IACpD,MAAMC,QAAQ,GAAG,sBAAjB;IACAC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;IACAC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;IACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAD,EAAW;MACrCK,MAAM,EAAE,MAD6B;MAErCC,OAAO,EAAE;QACP,gBAAgB;MADT,CAF4B;MAKrCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGV;MAAL,CAAf;IAL+B,CAAX,CAA5B;EAOD,CAXD;;EAaA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAG,SAAS,EAAC,UAAb;QAAA,WAAyBP,WAAW,CAACkB,QAArC;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIC,cAAc,CAACC,MAAf,CAAsBpB,WAAW,CAACqB,MAAlC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAG,SAAS,EAAC,8BAAb;QAAA,WACGrB,WAAW,CAACsB,QAAZ,CAAqBC,SADxB,OACoCvB,WAAW,CAACsB,QAAZ,CAAqBE,QADzD,SACsExB,WAAW,CAACyB,IADlF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,aAAD;MACE,EAAE,EAAEzB,WAAW,CAAC0B,EADlB;MAEE,OAAO,EAAEtB,QAFX;MAGE,QAAQ,EAAEH,OAHZ;MAIE,QAAQ,EAAE,MAAO0B,QAAP,IAAoB;QAC5BlB,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBiB,QAAxB;QACAlB,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BV,WAAW,CAAC0B,EAA1C;QACA,MAAMvB,8BAA8B,CAAC;UACnCyB,aAAa,EAAE5B,WAAW,CAAC0B,EADQ;UAEnCC;QAFmC,CAAD,CAApC;QAKA,MAAMrB,wBAAwB,CAAC;UAC7BoB,EAAE,EAAE1B,WAAW,CAAC0B,EADa;UAE7BtB,QAAQ,EAAEuB;QAFmB,CAAD,CAA9B;QAKAtB,WAAW,CAAEwB,IAAD,IAAU,CAACA,IAAZ,CAAX;MACD;IAlBH;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CAnDM;;GAAM9B,e;;KAAAA,e;AAqDb,MAAMoB,cAAc,GAAG,IAAIW,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;EACpDC,KAAK,EAAE,UAD6C;EAEpDC,QAAQ,EAAE;AAF0C,CAA/B,CAAvB"},"metadata":{},"sourceType":"module"}