{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tansu\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\ramp-fe-challenge\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const {\n    data: employees,\n    loading: employeesLoading,\n    fetchAll: fetchAllEmployees\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    loading: transactionsLoading,\n    fetchAll: fetchAllTransactions\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    fetchById: fetchTransactionsByEmployee\n  } = useTransactionsByEmployee();\n  const [selectedFilter, setSelectedFilter] = useState(\"All\");\n  const loadAllTransactions = useCallback(async () => {\n    await fetchAllEmployees();\n    await fetchAllTransactions();\n  }, [fetchAllEmployees, fetchAllTransactions]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    await fetchTransactionsByEmployee(employeeId);\n  }, [fetchTransactionsByEmployee]);\n  useEffect(() => {\n    if (employees === null && !employeesLoading) {\n      loadAllTransactions();\n    }\n  }, [employees, employeesLoading, loadAllTransactions]);\n  const hasMoreData = (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.nextPage) !== null;\n  const transactions = useMemo(() => {\n    if (selectedFilter === \"All\") {\n      var _paginatedTransaction;\n\n      return (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : null;\n    } else {\n      return transactionsByEmployee !== null && transactionsByEmployee !== void 0 ? transactionsByEmployee : null;\n    }\n  }, [selectedFilter, paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data, transactionsByEmployee]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: employeesLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: async newValue => {\n          if (newValue === null) {\n            return;\n          }\n\n          if (newValue.id === EMPTY_EMPLOYEE.id) {\n            await loadAllTransactions();\n            setSelectedFilter(\"All\");\n            return;\n          }\n\n          setSelectedFilter(newValue.id);\n          await loadTransactionsByEmployee(newValue.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), transactions !== null && selectedFilter === \"All\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          disabled: transactionsLoading || !hasMoreData,\n          onClick: async () => {\n            await loadAllTransactions();\n          },\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LAoa8fIdRG6BmqpBz9lKN5j+f/c=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Fragment","useCallback","useEffect","useMemo","useState","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","App","data","employees","loading","employeesLoading","fetchAll","fetchAllEmployees","paginatedTransactions","transactionsLoading","fetchAllTransactions","transactionsByEmployee","fetchById","fetchTransactionsByEmployee","selectedFilter","setSelectedFilter","loadAllTransactions","loadTransactionsByEmployee","employeeId","hasMoreData","nextPage","transactions","item","value","id","label","firstName","lastName","newValue"],"sources":["C:/Users/tansu/OneDrive/Masaüstü/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import React, { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\n\nexport function App() {\n  const { data: employees, loading: employeesLoading, fetchAll: fetchAllEmployees } = useEmployees()\n  const {\n    data: paginatedTransactions,\n    loading: transactionsLoading,\n    fetchAll: fetchAllTransactions,\n  } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, fetchById: fetchTransactionsByEmployee } =\n    useTransactionsByEmployee()\n  const [selectedFilter, setSelectedFilter] = useState<string | \"All\">(\"All\")\n\n  const loadAllTransactions = useCallback(async () => {\n    await fetchAllEmployees()\n    await fetchAllTransactions()\n  }, [fetchAllEmployees, fetchAllTransactions])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      await fetchTransactionsByEmployee(employeeId)\n    },\n    [fetchTransactionsByEmployee]\n  )\n\n  useEffect(() => {\n    if (employees === null && !employeesLoading) {\n      loadAllTransactions()\n    }\n  }, [employees, employeesLoading, loadAllTransactions])\n\n  const hasMoreData = paginatedTransactions?.nextPage !== null\n\n  const transactions = useMemo(() => {\n    if (selectedFilter === \"All\") {\n      return paginatedTransactions?.data ?? null\n    } else {\n      return transactionsByEmployee ?? null\n    }\n  }, [selectedFilter, paginatedTransactions?.data, transactionsByEmployee])\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={employeesLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue === null) {\n              return\n            }\n            if (newValue.id === EMPTY_EMPLOYEE.id) {\n              await loadAllTransactions()\n              setSelectedFilter(\"All\")\n              return\n            }\n            setSelectedFilter(newValue.id)\n            await loadTransactionsByEmployee(newValue.id)\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions transactions={transactions} />\n\n          {transactions !== null && selectedFilter === \"All\" && (\n            <button\n              className=\"RampButton\"\n              disabled={transactionsLoading || !hasMoreData}\n              onClick={async () => {\n                await loadAllTransactions()\n              }}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}