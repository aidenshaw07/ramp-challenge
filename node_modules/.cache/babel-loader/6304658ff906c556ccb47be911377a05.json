{"ast":null,"code":"import { getEmployees, getTransactionsPaginated, getTransactionsByEmployee, setTransactionApproval } from \"./requests\";\nconst timeout = getTimeout();\nconst mockTimeout = 1 * timeout;\nexport function fakeFetch(endpoint, params) {\n  return new Promise((resolve, reject) => {\n    console.log(\"FAKE FETCH\", endpoint, params);\n    mockApiLogger({\n      message: \"Loading request\",\n      data: {\n        endpoint,\n        params\n      },\n      type: \"info\"\n    });\n    let result;\n\n    try {\n      switch (endpoint) {\n        case \"employees\":\n          result = getEmployees();\n          setTimeout(() => {\n            mockApiLogger({\n              data: {\n                endpoint,\n                params,\n                result\n              }\n            });\n            resolve(result);\n          }, mockTimeout);\n          break;\n\n        case \"paginatedTransactions\":\n          result = getTransactionsPaginated(params);\n          setTimeout(() => {\n            mockApiLogger({\n              data: {\n                endpoint,\n                params,\n                result\n              }\n            });\n            resolve(result);\n          }, mockTimeout * 2.5);\n          break;\n\n        case \"transactionsByEmployee\":\n          result = getTransactionsByEmployee(params);\n          setTimeout(() => {\n            mockApiLogger({\n              data: {\n                endpoint,\n                params,\n                result\n              }\n            });\n            resolve(result);\n          }, mockTimeout * 1.5);\n          break;\n\n        case \"setTransactionApproval\":\n          result = setTransactionApproval(params);\n          setTimeout(() => {\n            console.log(\"params\", params);\n            mockApiLogger({\n              data: {\n                endpoint,\n                params,\n                result\n              }\n            });\n            resolve(result);\n          }, mockTimeout * 1);\n          break;\n\n        default:\n          throw new Error(\"Invalid endpoint\");\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        mockApiLogger({\n          message: error.message,\n          data: {\n            endpoint,\n            params\n          },\n          type: \"error\"\n        });\n        reject(error.message);\n      }\n    }\n  });\n}\n\nfunction mockApiLogger(_ref) {\n  let {\n    data,\n    message = \"Success request\",\n    type = \"success\"\n  } = _ref;\n\n  if (process.env.REACT_APP_MOCK_REQUEST_LOGS_ENABLED === \"false\") {\n    return;\n  }\n\n  console.log(`%c--Fake Request Debugger-- %c${message}`, \"color: #717171\", getTitleColor());\n  console.log(data);\n\n  function getTitleColor() {\n    if (type === \"error\") {\n      return \"color: #d93e3e;\";\n    }\n\n    if (type === \"info\") {\n      return \"color: #1670d2;\";\n    }\n\n    return \"color: #548a54;\";\n  }\n}\n\nfunction getTimeout() {\n  var _ref2, _URL$searchParams$get;\n\n  const timeout = parseInt((_ref2 = (_URL$searchParams$get = new URL(document.location).searchParams.get(\"timeout\")) !== null && _URL$searchParams$get !== void 0 ? _URL$searchParams$get : process.env.REACT_APP_TIMEOUT_MULTIPLIER) !== null && _ref2 !== void 0 ? _ref2 : \"1000\");\n\n  if (Number.isNaN(timeout)) {\n    return 1000;\n  }\n\n  return timeout;\n}","map":{"version":3,"names":["getEmployees","getTransactionsPaginated","getTransactionsByEmployee","setTransactionApproval","timeout","getTimeout","mockTimeout","fakeFetch","endpoint","params","Promise","resolve","reject","console","log","mockApiLogger","message","data","type","result","setTimeout","Error","error","process","env","REACT_APP_MOCK_REQUEST_LOGS_ENABLED","getTitleColor","parseInt","URL","document","location","searchParams","get","REACT_APP_TIMEOUT_MULTIPLIER","Number","isNaN"],"sources":["C:/Users/tansu/OneDrive/Masaüstü/ramp-fe-challenge/src/utils/fetch.ts"],"sourcesContent":["import {\n  getEmployees,\n  getTransactionsPaginated,\n  getTransactionsByEmployee,\n  setTransactionApproval,\n} from \"./requests\"\nimport { PaginatedRequestParams, RequestByEmployeeParams, SetTransactionApprovalParams } from \"./types\"\n\nconst timeout = getTimeout()\nconst mockTimeout = 1 * timeout\n\nexport function fakeFetch<TData, TParams extends object = object>(\n  endpoint: RegisteredEndpoints,\n  params?: TParams\n): Promise<TData> {\n  return new Promise((resolve, reject) => {\n    console.log(\"FAKE FETCH\", endpoint, params)\n    mockApiLogger({\n      message: \"Loading request\",\n      data: { endpoint, params },\n      type: \"info\",\n    })\n\n    let result: TData\n\n    try {\n      switch (endpoint) {\n        case \"employees\":\n          result = getEmployees() as unknown as TData\n\n          setTimeout(() => {\n            mockApiLogger({ data: { endpoint, params, result } })\n            resolve(result)\n          }, mockTimeout)\n          break\n\n        case \"paginatedTransactions\":\n          result = getTransactionsPaginated(params as PaginatedRequestParams) as unknown as TData\n\n          setTimeout(() => {\n            mockApiLogger({ data: { endpoint, params, result } })\n            resolve(result)\n          }, mockTimeout * 2.5)\n          break\n\n        case \"transactionsByEmployee\":\n          result = getTransactionsByEmployee(params as RequestByEmployeeParams) as unknown as TData\n\n          setTimeout(() => {\n            mockApiLogger({ data: { endpoint, params, result } })\n            resolve(result)\n          }, mockTimeout * 1.5)\n          break\n\n        case \"setTransactionApproval\":\n          result = setTransactionApproval(params as SetTransactionApprovalParams) as unknown as TData\n\n          setTimeout(() => {\n            console.log(\"params\", params)\n            mockApiLogger({ data: { endpoint, params, result } })\n            resolve(result)\n          }, mockTimeout * 1)\n          break\n\n        default:\n          throw new Error(\"Invalid endpoint\")\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        mockApiLogger({\n          message: error.message,\n          data: { endpoint, params },\n          type: \"error\",\n        })\n        reject(error.message)\n      }\n    }\n  })\n}\n\nfunction mockApiLogger({\n  data,\n  message = \"Success request\",\n  type = \"success\",\n}: {\n  message?: string\n  data: object\n  type?: \"success\" | \"error\" | \"info\"\n}) {\n  if (process.env.REACT_APP_MOCK_REQUEST_LOGS_ENABLED === \"false\") {\n    return\n  }\n\n  console.log(`%c--Fake Request Debugger-- %c${message}`, \"color: #717171\", getTitleColor())\n  console.log(data)\n\n  function getTitleColor() {\n    if (type === \"error\") {\n      return \"color: #d93e3e;\"\n    }\n\n    if (type === \"info\") {\n      return \"color: #1670d2;\"\n    }\n\n    return \"color: #548a54;\"\n  }\n}\n\nfunction getTimeout() {\n  const timeout = parseInt(\n    new URL(document.location as unknown as URL).searchParams.get(\"timeout\") ??\n      process.env.REACT_APP_TIMEOUT_MULTIPLIER ??\n      \"1000\"\n  )\n\n  if (Number.isNaN(timeout)) {\n    return 1000\n  }\n\n  return timeout\n}\n\nexport type RegisteredEndpoints =\n  | \"employees\"\n  | \"paginatedTransactions\"\n  | \"transactionsByEmployee\"\n  | \"setTransactionApproval\"\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}